<?php
namespace Rql\Generated\Query;

// @@protoc_insertion_point(namespace:Rql.Generated.Query.QueryType)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: q2.proto
 *
 */
class QueryType extends \ProtocolBuffers\Enum
{
  // @@protoc_insertion_point(traits:Rql.Generated.Query.QueryType)
  
  const START = 1;
  const PB_CONTINUE = 2;
  /**
   * (see [Response]).
   */
  const STOP = 3;
  const NOREPLY_WAIT = 4;
  
  // @@protoc_insertion_point(const_scope:Rql.Generated.Query.QueryType)
  
  // @@protoc_insertion_point(class_scope:Rql.Generated.Query.QueryType)
  
  /**
   * @return \ProtocolBuffers\EnumDescriptor
   */
  public static function getEnumDescriptor()
  {
    static $descriptor;
    if (!$descriptor) {
      $builder = new \ProtocolBuffers\EnumDescriptorBuilder();
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::START,
        "name"  => 'START',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::PB_CONTINUE,
        "name"  => 'CONTINUE',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::STOP,
        "name"  => 'STOP',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::NOREPLY_WAIT,
        "name"  => 'NOREPLY_WAIT',
      )));
      // @@protoc_insertion_point(builder_scope:Rql.Generated.Query.QueryType)
      $descriptor = $builder->build();
    }
    return $descriptor;
  }
}
