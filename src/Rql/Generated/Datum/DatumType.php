<?php
namespace Rql\Generated\Datum;

// @@protoc_insertion_point(namespace:Rql.Generated.Datum.DatumType)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: q2.proto
 *
 */
class DatumType extends \ProtocolBuffers\Enum
{
  // @@protoc_insertion_point(traits:Rql.Generated.Datum.DatumType)
  
  const R_NULL = 1;
  const R_BOOL = 2;
  const R_NUM = 3;
  const R_STR = 4;
  const R_ARRAY = 5;
  const R_OBJECT = 6;
  /**
   * This [DatumType] will only be used if [accepts_r_json] is
   * set to [true] in [Query].  [r_str] will be filled with a
   * JSON encoding of the [Datum].
   */
  const R_JSON = 7;
  
  // @@protoc_insertion_point(const_scope:Rql.Generated.Datum.DatumType)
  
  // @@protoc_insertion_point(class_scope:Rql.Generated.Datum.DatumType)
  
  /**
   * @return \ProtocolBuffers\EnumDescriptor
   */
  public static function getEnumDescriptor()
  {
    static $descriptor;
    if (!$descriptor) {
      $builder = new \ProtocolBuffers\EnumDescriptorBuilder();
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::R_NULL,
        "name"  => 'R_NULL',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::R_BOOL,
        "name"  => 'R_BOOL',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::R_NUM,
        "name"  => 'R_NUM',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::R_STR,
        "name"  => 'R_STR',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::R_ARRAY,
        "name"  => 'R_ARRAY',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::R_OBJECT,
        "name"  => 'R_OBJECT',
      )));
      $builder->addValue(new \ProtocolBuffers\EnumValueDescriptor(array(
        "value" => self::R_JSON,
        "name"  => 'R_JSON',
      )));
      // @@protoc_insertion_point(builder_scope:Rql.Generated.Datum.DatumType)
      $descriptor = $builder->build();
    }
    return $descriptor;
  }
}
